(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21726,        465]
NotebookOptionsPosition[     20288,        433]
NotebookOutlinePosition[     20691,        449]
CellTagsIndexPosition[     20648,        446]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Convergence", " ", 
    RowBox[{"Tester", ":", " ", 
     RowBox[{"k", " ", "sweep"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
    "instead", " ", "of", " ", "computing", " ", "single", " ", "values", " ",
      "and", " ", "outputting", " ", "a", " ", "sequence", " ", "for", " ", 
     "increasing", " ", "m"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
    "we", " ", "will", " ", "do", " ", "this", " ", "repeateadly", " ", "for",
      " ", "increasing", " ", "values", " ", "of", " ", "k"}], ",", " ", 
    RowBox[{"and", " ", "then", " ", "print", " ", "a", " ", 
     RowBox[{"matrix", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "==="}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MACROS", " ", "/", " ", "USER"}], " ", "PARAMETERS"}], " ", "===",
      "===", "===", "===", "===", "=="}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"f", ":=", " ", 
     RowBox[{
     "our", " ", "function", " ", "of", " ", "m", " ", "on", " ", "S", " ", 
      "to", " ", "be", " ", "evaluated"}]}], ";", " ", "\[IndentingNewLine]", 
    RowBox[{"k", " ", ":=", " ", 
     RowBox[{"offset", " ", "for", " ", 
      RowBox[{"n", ".", " ", "can"}], " ", "be", " ", "any", " ", "integer", 
      " ", "so", " ", "long", " ", "as", " ", "it", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "bring", " ", "n", " ", "below", " ", 
      "0."}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"start", ":=", " ", 
     RowBox[{
      RowBox[{
      "first", " ", "m", " ", "to", " ", "be", " ", "checked", " ", "in", " ", 
       RowBox[{"sequence", ".", " ", "must"}], " ", "be"}], " ", 
      "\[GreaterEqual]", " ", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"end", ":=", " ", 
     RowBox[{
     "last", " ", "m", " ", "to", " ", "be", " ", "checked", " ", "in"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"step", " ", ":=", " ", 
     RowBox[{
      RowBox[{
      "how", " ", "much", " ", "to", " ", "increment", " ", "by", " ", "each",
        " ", 
       RowBox[{"iteration", ".", " ", "determines"}], " ", "what", " ", "m", 
       " ", "are", " ", "in", " ", "our", " ", "set", " ", 
       RowBox[{
       "S", ".", " ", "\[IndentingNewLine]", "e", ".", "g", ".", " ", 
        "step"}]}], " ", "=", " ", 
      RowBox[{"2", " ", "corresponds", " ", "only", " ", "even", " ", 
       RowBox[{"m", "."}]}]}]}], ";"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "m_", "]"}], " ", ":=", 
     RowBox[{"Floor", "[", 
      RowBox[{"Sqrt", "[", "m", "]"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"start", "=", "1"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"end", "=", "64"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"step", " ", "=", " ", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kstart", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kend", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kstep", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "==="}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfbC2eGNx4xvHC817doDoTxvu7AHRFs8PnQLRJxL7
X4LoU65Fb0H0DbsLn0H0f71LYDpHjTuyDEh3HU4F0wEnD55IbQLqC1t4CkRn
nTa8BKIPMadcBtHP7ny6B6ILopY/BNFNfsFiMc1vHDcWzpYG0SIHzFVA9A71
DRog+pvsJnMQPflMuhWIblFR9wHR19g++4Jog0kRySCa73kUmLZ7/TULRPv0
N+aAaKf9lmZxIH3TllqC6APr4x1B9BSVZDB9I7/ME0THGS7zAtGaoRrlILr0
88EKEN1kHV4Lot8r2daB6Eld3JmJQPqX1cZsEB30e2oJiJb4OwNMK/yeXAGi
kztUGkE0AI5kt2M=
  "],
 CellLabel->"In[95]:=",ExpressionUUID->"51cba135-1db8-4db9-ac4b-369ea1e73d11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Dependencies", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"Name", ":", " ", 
    RowBox[{
    "partitionN", "\[IndentingNewLine]", " ", "Mathematical", " ", 
     "Notation"}], ":", " ", 
    RowBox[{"N", 
     RowBox[{"(", 
      RowBox[{"r", ",", "m", ",", "n"}], ")"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Desc", "."}], ":", " ", 
       RowBox[{
       "Gives", " ", "the", " ", "number", " ", "of", " ", "partitions", " ", 
        "of", " ", "a", " ", "positive", " ", "integer"}]}], ",", " ", "n", 
      ",", " ", 
      RowBox[{
      "whose", " ", "RANK", " ", "is", " ", "congruent", " ", "to", " ", 
       "r"}], ",", " ", 
      RowBox[{"modulo", " ", 
       RowBox[{"m", "."}]}]}]}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"partitionN", "[", 
    RowBox[{"r_", ",", "m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r0", "=", "r"}], ",", 
       RowBox[{"m0", "=", "m"}], ",", 
       RowBox[{"n0", "=", "n"}], ",", 
       RowBox[{"counter", "=", "0"}], ",", "i", ",", "rank", ",", "list"}], 
      "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"list", " ", "=", " ", 
       RowBox[{"IntegerPartitions", "[", "n0", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rank", "=", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Length", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", " ", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"rank", ",", "m0"}], "]"}], "\[Equal]", "r0"}], ",", 
           RowBox[{"counter", "++"}]}], "]"}], ";"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "counter"}]}], "]"}]}]}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"0f0402fb-ac05-43fc-aadc-8143fbc7c6af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Build", " ", "our", " ", "matrix"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"mList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "kstart"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", "kend"}], ",", " ", 
      RowBox[{"i", "+=", "kstep"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"For", " ", "each", " ", "value", " ", "of", " ", "k"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"seq", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", " ", "=", " ", "start"}], ",", " ", 
         RowBox[{"j", " ", "\[LessEqual]", " ", "end"}], ",", " ", 
         RowBox[{"j", "+=", "step"}], ",", "   ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "For", " ", "each", " ", "value", " ", "in", " ", "our", " ", 
           "sequence"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"seq", ",", " ", 
           RowBox[{"partitionN", "[", 
            RowBox[{
             RowBox[{"f", "[", "j", "]"}], ",", "j", ",", 
             RowBox[{
              RowBox[{"f", "[", "j", "]"}], "+", "i"}]}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"mList", ",", "seq"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8259666877783365`*^9, 3.8259667921168237`*^9}, {
   3.8259669713866897`*^9, 3.8259672130991983`*^9}, {3.8259706717401433`*^9, 
   3.8259706735863085`*^9}, {3.825971004900962*^9, 3.8259711587670403`*^9}, 
   3.8259711985018983`*^9, {3.8259712465737915`*^9, 3.825971289672942*^9}, {
   3.8259713474458637`*^9, 3.8259713505941153`*^9}, {3.8259714505029163`*^9, 
   3.8259715299664855`*^9}, {3.8259717230320807`*^9, 
   3.8259717392720504`*^9}, {3.825971942322341*^9, 3.8259719649757204`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"64396033-3bfe-48b9-a8e6-1ce75e4492aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mList", "]"}]], "Input",
 CellChangeTimes->{{3.8259716145392447`*^9, 3.8259716206223974`*^9}, {
  3.825971845764392*^9, 3.825971848565112*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"e410164a-e3f4-4ce5-bc84-d3daf0dee3e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "2", "1", "2", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1"},
     {"0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "4", "1", "2", "1", "2", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1"},
     {"0", "2", "3", "2", "2", "1", "2", "1", "2", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1"},
     {"0", "8", "4", "6", "3", "3", "2", "3", "2", "3", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2"},
     {"0", "4", "4", "4", "5", "3", "3", "2", "3", "2", "3", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2"},
     {"0", "14", "8", "8", "6", "6", "4", "4", "5", "5", "4", "5", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4"},
     {"0", "12", "10", "8", "8", "5", "6", "4", "5", "4", "4", "3", "4", "3", 
      "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4"},
     {"0", "26", "13", "18", "11", "12", "8", "9", "8", "8", "7", "7", "6", 
      "7", "6", "7", "6", "6", "6", "6", "6", "6", "6", "6", "7", "7", "7", 
      "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "7", "7", "7", "7", "7"},
     {"0", "22", "20", "16", "15", "11", "11", "8", "12", "9", "9", "8", "8", 
      "7", "8", "7", "8", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "7", "7", "7", "7", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8", "8", "8", "8", "8", "8"},
     {"0", "44", "26", "28", "21", "18", "15", "14", "14", "15", "12", "12", 
      "11", "11", "10", "12", "11", "12", "11", "11", "11", "11", "11", "11", 
      "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", 
      "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", 
      "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", 
      "12", "12", "12", "12"},
     {"0", "44", "32", "30", "27", "20", "19", "15", "19", "15", "16", "13", 
      "13", "12", "12", "13", "13", "12", "13", "12", "12", "12", "12", "12", 
      "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "14"},
     {"0", "76", "46", "50", "35", "33", "25", "25", "27", "25", "21", "22", 
      "19", "19", "18", "20", "19", "19", "18", "19", "18", "18", "18", "18", 
      "19", "19", "19", "19", "19", "19", "19", "19", "19", "19", "19", "20", 
      "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", 
      "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", "20", 
      "20", "20", "20", "20"},
     {"0", "78", "59", "52", "46", "34", "32", "26", "31", "27", "26", "22", 
      "23", "20", "20", "22", "22", "21", "21", "20", "21", "20", "20", "20", 
      "21", "21", "21", "21", "21", "21", "21", "21", "21", "21", "21", "22", 
      "22", "22", "22", "22", "22", "22", "22", "22", "22", "22", "22", "22", 
      "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", "23", 
      "23", "23", "23", "23"},
     {"0", "126", "75", "78", "59", "54", "43", "39", "42", "41", "35", "34", 
      "30", "31", "28", "32", "30", "30", "29", "29", "28", "29", "28", "28", 
      "30", "30", "30", "30", "30", "30", "30", "30", "30", "30", "30", "31", 
      "31", "31", "31", "31", "31", "31", "31", "31", "31", "31", "31", "31", 
      "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", "32", 
      "32", "32", "32", "33"},
     {"0", "138", "101", "90", "78", "60", "55", "45", "55", "45", "44", "39",
       "38", "34", "35", "37", "37", "35", "35", "34", "34", "33", "34", "33",
       "36", "35", "35", "35", "35", "35", "35", "35", "35", "35", "35", "37",
       "37", "37", "37", "37", "37", "37", "37", "37", "37", "37", "37", "37",
       "38", "38", "38", "38", "38", "38", "38", "38", "38", "38", "38", "38",
       "38", "38", "38", "39"},
     {"0", "206", "129", "132", "98", "86", "70", "66", "68", "65", "57", 
      "54", "49", "48", "44", "52", "48", "48", "46", "46", "45", "45", "44", 
      "45", "47", "48", "47", "47", "47", "47", "47", "47", "47", "47", "47", 
      "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", 
      "49", "51", "51", "51", "51", "51", "51", "51", "51", "51", "51", "51", 
      "51", "51", "51", "51", "52"},
     {"0", "228", "161", "148", "125", "100", "90", "74", "87", "75", "71", 
      "63", "61", "56", "55", "59", "59", "55", "55", "53", "53", "52", "52", 
      "51", "56", "55", "56", "55", "55", "55", "55", "55", "55", "55", "55", 
      "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", 
      "58", "60", "60", "60", "60", "60", "60", "60", "60", "60", "60", "60", 
      "60", "60", "60", "60", "62"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8259716209830523`*^9, 3.82597175803185*^9, 3.8259718498661127`*^9, 
   3.8264623722147646`*^9, 3.8269666605831547`*^9, 3.826966721134159*^9, 
   3.8269667538367186`*^9, 3.8269668611127396`*^9, 3.826967003973836*^9, 
   3.8269673311672487`*^9, 3.8269674036593714`*^9, 3.8269715588357253`*^9, 
   3.8269716030057726`*^9, 3.8269776126450095`*^9, 3.8269777049558907`*^9, {
   3.8269777618184457`*^9, 3.8269778068858604`*^9}},
 CellLabel->
  "Out[105]//MatrixForm=",ExpressionUUID->"5cadb8b2-e637-4294-8c3a-\
befb3f2c568a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
    ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",",
     "2", ",", "2", ",", "2", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.825971771895069*^9, 3.8259717749498487`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"5bbb9946-5d55-42bd-984a-2eebc23bca28"],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{
  3.8259717756627045`*^9, 3.82646237226777*^9, 3.8269666606411595`*^9, 
   3.826966721191167*^9, 3.8269667538957233`*^9, 3.826966861155427*^9, 
   3.826967004038843*^9, 3.826967331210972*^9, 3.826967403716378*^9, 
   3.8269715589193*^9, 3.826971603121784*^9, 3.8269776126762238`*^9, 
   3.8269777049871063`*^9, {3.8269777618496857`*^9, 3.826977806932722*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"5b1e9448-9614-457e-b83c-18bf7ff1d3cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
   "240", ",", "198", ",", "190", ",", "186", ",", "188", ",", "192", ",", 
    "196", ",", "198", ",", "202", ",", "204", ",", "206", ",", "208", ",", 
    "208", ",", "208", ",", "210", ",", "210", ",", "210", ",", "210", ",", 
    "210"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.825971782350618*^9, 3.8259717856361656`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"61ec510f-cbae-48cb-baf5-c63f4a708b7c"],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{
  3.825971786209176*^9, 3.826462372320772*^9, 3.8269666606991653`*^9, 
   3.8269667212471695`*^9, 3.826966753950433*^9, 3.8269668611874266`*^9, 
   3.826967004102847*^9, 3.8269673312426233`*^9, 3.826967403772381*^9, 
   3.8269715590003123`*^9, 3.826971603245827*^9, 3.826977612707466*^9, 
   3.826977705002756*^9, {3.8269777618809285`*^9, 3.826977806963951*^9}},
 CellLabel->
  "Out[107]=",ExpressionUUID->"78c6b888-85a3-44d7-b754-b286a3e24d85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "mlist", "]"}]], "Input",
 CellChangeTimes->{{3.8259718029973164`*^9, 3.8259718110157356`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"0e871248-0c53-4cee-b1ee-173858c77489"],

Cell[BoxData["mlist"], "Print",
 CellChangeTimes->{
  3.825971812719293*^9, 3.8264623723727765`*^9, 3.826966660754779*^9, 
   3.8269667213081746`*^9, 3.826966754002437*^9, 3.82696686122143*^9, 
   3.8269670041735744`*^9, 3.8269673312786274`*^9, 3.826967403825261*^9, 
   3.8269715590973167`*^9, 3.826971603372426*^9, 3.8269776127387094`*^9, 
   3.8269777050183764`*^9, {3.826977761927792*^9, 3.8269778070108304`*^9}},
 CellLabel->
  "During evaluation of \
In[108]:=",ExpressionUUID->"b337e16e-a800-4247-9efc-0ca5d8d79c8d"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dd5d6e70-d898-4ffa-88f2-644ee42f09a3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4045, 93, 390, "Input",ExpressionUUID->"51cba135-1db8-4db9-ac4b-369ea1e73d11"],
Cell[4606, 115, 2429, 64, 238, "Input",ExpressionUUID->"0f0402fb-ac05-43fc-aadc-8143fbc7c6af"],
Cell[7038, 181, 2200, 48, 181, "Input",ExpressionUUID->"64396033-3bfe-48b9-a8e6-1ce75e4492aa"],
Cell[CellGroupData[{
Cell[9263, 233, 269, 5, 28, "Input",ExpressionUUID->"e410164a-e3f4-4ce5-bc84-d3daf0dee3e2"],
Cell[9535, 240, 7967, 121, 334, "Output",ExpressionUUID->"5cadb8b2-e637-4294-8c3a-befb3f2c568a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17539, 366, 441, 9, 28, "Input",ExpressionUUID->"5bbb9946-5d55-42bd-984a-2eebc23bca28"],
Cell[17983, 377, 492, 8, 32, "Output",ExpressionUUID->"5b1e9448-9614-457e-b83c-18bf7ff1d3cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18512, 390, 484, 10, 28, "Input",ExpressionUUID->"61ec510f-cbae-48cb-baf5-c63f4a708b7c"],
Cell[18999, 402, 495, 8, 32, "Output",ExpressionUUID->"78c6b888-85a3-44d7-b754-b286a3e24d85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19531, 415, 215, 4, 28, "Input",ExpressionUUID->"0e871248-0c53-4cee-b1ee-173858c77489"],
Cell[19749, 421, 523, 9, 22, "Print",ExpressionUUID->"b337e16e-a800-4247-9efc-0ca5d8d79c8d"]
}, Open  ]]
}
]
*)

